{
    "openapi": "3.0.0",
    "info": {
        "title": "PalmOutsourcing Task (2) - Product Scraping API",
        "description": "RESTful API for scraping and managing e-commerce products from Amazon and Jumia. Provides comprehensive CRUD operations, batch scraping, filtering, pagination, and real-time price monitoring.",
        "contact": {
            "name": "API Support",
            "email": "support@example.com"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost:8081",
            "description": "API Server"
        }
    ],
    "paths": {
        "/api": {},
        "/api/products": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "List all products with filtering and pagination",
                "description": "Retrieve a paginated list of watched products with optional filtering, searching, and sorting. Supports comprehensive filtering by platform, price range, rating, category, and more. Results are cached for performance.",
                "operationId": "getProducts",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number for pagination",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1,
                            "minimum": 1,
                            "example": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 15,
                            "maximum": 100,
                            "minimum": 1,
                            "example": 15
                        }
                    },
                    {
                        "name": "platform",
                        "in": "query",
                        "description": "Filter by platform",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "amazon",
                                "jumia"
                            ],
                            "example": "amazon"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search in product title",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "maxLength": 255,
                            "example": "wireless headphones"
                        }
                    },
                    {
                        "name": "min_price",
                        "in": "query",
                        "description": "Minimum price filter",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "format": "float",
                            "minimum": 0,
                            "example": 50
                        }
                    },
                    {
                        "name": "max_price",
                        "in": "query",
                        "description": "Maximum price filter",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "format": "float",
                            "minimum": 0,
                            "example": 500
                        }
                    },
                    {
                        "name": "min_rating",
                        "in": "query",
                        "description": "Minimum rating filter",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "format": "float",
                            "maximum": 5,
                            "minimum": 0,
                            "example": 4
                        }
                    },
                    {
                        "name": "max_rating",
                        "in": "query",
                        "description": "Maximum rating filter",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "format": "float",
                            "maximum": 5,
                            "minimum": 0,
                            "example": 5
                        }
                    },
                    {
                        "name": "category",
                        "in": "query",
                        "description": "Filter by platform category",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "maxLength": 255,
                            "example": "Electronics"
                        }
                    },
                    {
                        "name": "currency",
                        "in": "query",
                        "description": "Filter by price currency (ISO 4217)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "maxLength": 3,
                            "example": "USD"
                        }
                    },
                    {
                        "name": "is_active",
                        "in": "query",
                        "description": "Filter by active status",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "example": true
                        }
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "description": "Field to sort by",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "created_at",
                            "enum": [
                                "created_at",
                                "updated_at",
                                "price",
                                "rating",
                                "title"
                            ],
                            "example": "price"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort direction",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "desc",
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "example": "asc"
                        }
                    },
                    {
                        "name": "created_after",
                        "in": "query",
                        "description": "Filter products created after this date",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "example": "2025-01-01"
                        }
                    },
                    {
                        "name": "created_before",
                        "in": "query",
                        "description": "Filter products created before this date",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "example": "2025-12-31"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Products retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Products retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/Product"
                                                    }
                                                },
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "example": 15
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 100
                                                },
                                                "last_page": {
                                                    "type": "integer",
                                                    "example": 7
                                                },
                                                "from": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "to": {
                                                    "type": "integer",
                                                    "example": 15
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation failed"
                                        },
                                        "errors": {
                                            "properties": {
                                                "per_page": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The per_page must not be greater than 100."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred while fetching products"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Products"
                ],
                "summary": "Create a new product by scraping from URL",
                "description": "Scrape product details from the provided URL and create a new watched product. The product will be scraped from the specified platform (Amazon or Jumia) and stored in the database.",
                "operationId": "createProduct",
                "requestBody": {
                    "description": "Product URL and platform",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "url",
                                    "platform"
                                ],
                                "properties": {
                                    "url": {
                                        "description": "Product URL to scrape",
                                        "type": "string",
                                        "format": "uri",
                                        "maxLength": 500,
                                        "example": "https://www.amazon.com/dp/B0863TXGM3"
                                    },
                                    "platform": {
                                        "description": "E-commerce platform",
                                        "type": "string",
                                        "enum": [
                                            "amazon",
                                            "jumia"
                                        ],
                                        "example": "amazon"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Product created and scraped successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Product created and scraped successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Product"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Product already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Product already exists"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation failed or scraping failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation failed"
                                        },
                                        "errors": {
                                            "properties": {
                                                "url": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The url field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred while creating product"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/products/{id}": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get a single product by ID",
                "description": "Retrieve detailed information about a specific product by its ID",
                "operationId": "getProductById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Product ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Product retrieved successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Product"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Product not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred while fetching product"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Products"
                ],
                "summary": "Delete a product",
                "description": "Permanently delete a watched product from the database",
                "operationId": "deleteProduct",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Product ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Product deleted successfully"
                                        },
                                        "data": {
                                            "type": "null",
                                            "example": null
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Product not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Delete failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to delete product"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred while deleting product"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "Products"
                ],
                "summary": "Update a product (re-scrape or toggle active status)",
                "description": "Update a product by re-scraping fresh data from its source URL or toggling its active status. At least one parameter (rescrape or is_active) must be provided.",
                "operationId": "updateProduct",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Product ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "description": "Update parameters",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "rescrape": {
                                        "description": "Trigger re-scraping of product data",
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "is_active": {
                                        "description": "Set product active status",
                                        "type": "boolean",
                                        "example": false
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Product updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Product re-scraped and updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Product"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "No valid update parameters provided",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "No valid update parameters provided"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Product not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation or update failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to update product"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred while updating product"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/products/statistics": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get aggregate product statistics",
                "description": "Retrieve aggregate statistics about watched products including total count, active products, platform breakdown, and average metrics",
                "operationId": "getProductStatistics",
                "responses": {
                    "200": {
                        "description": "Statistics retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Statistics retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "total_products": {
                                                    "type": "integer",
                                                    "example": 150
                                                },
                                                "active_products": {
                                                    "type": "integer",
                                                    "example": 120
                                                },
                                                "inactive_products": {
                                                    "type": "integer",
                                                    "example": 30
                                                },
                                                "by_platform": {
                                                    "properties": {
                                                        "amazon": {
                                                            "type": "integer",
                                                            "example": 80
                                                        },
                                                        "jumia": {
                                                            "type": "integer",
                                                            "example": 70
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "average_price": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 45.5
                                                },
                                                "average_rating": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 4.2
                                                },
                                                "total_scrapes": {
                                                    "type": "integer",
                                                    "example": 450
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred while fetching statistics"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/scraping/scrape": {
            "post": {
                "tags": [
                    "Scraping"
                ],
                "summary": "Scrape and store a single product",
                "description": "Scrape product details from a URL and store it in the database. This endpoint creates a new watched product by fetching data from the specified e-commerce platform.",
                "operationId": "scrapeProduct",
                "requestBody": {
                    "description": "Product URL and platform to scrape from",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "url",
                                    "platform"
                                ],
                                "properties": {
                                    "url": {
                                        "description": "Product URL to scrape",
                                        "type": "string",
                                        "format": "uri",
                                        "maxLength": 500,
                                        "example": "https://www.amazon.com/dp/B0863TXGM3"
                                    },
                                    "platform": {
                                        "description": "E-commerce platform",
                                        "type": "string",
                                        "enum": [
                                            "amazon",
                                            "jumia"
                                        ],
                                        "example": "amazon"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Product scraped and stored successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Product scraped and stored successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Product"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Product already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Product already exists for this URL and platform"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation or scraping failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation failed"
                                        },
                                        "errors": {
                                            "properties": {
                                                "url": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The url must be a valid URL."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/scraping/batch": {
            "post": {
                "tags": [
                    "Scraping"
                ],
                "summary": "Batch scrape multiple products",
                "description": "Scrape and store multiple products in a single request. Maximum 50 products per batch. Returns aggregated results with success/failure counts.",
                "operationId": "batchScrapeProducts",
                "requestBody": {
                    "description": "Array of products to scrape",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "products"
                                ],
                                "properties": {
                                    "products": {
                                        "type": "array",
                                        "items": {
                                            "required": [
                                                "url",
                                                "platform"
                                            ],
                                            "properties": {
                                                "url": {
                                                    "type": "string",
                                                    "format": "uri",
                                                    "maxLength": 500,
                                                    "example": "https://www.amazon.com/dp/B0863TXGM3"
                                                },
                                                "platform": {
                                                    "type": "string",
                                                    "enum": [
                                                        "amazon",
                                                        "jumia"
                                                    ],
                                                    "example": "amazon"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "maxItems": 50,
                                        "minItems": 1
                                    }
                                },
                                "type": "object"
                            },
                            "example": {
                                "products": [
                                    {
                                        "url": "https://www.amazon.com/dp/B001",
                                        "platform": "amazon"
                                    },
                                    {
                                        "url": "https://www.jumia.com.eg/product-123",
                                        "platform": "jumia"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Batch scraping completed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Batch scraping completed"
                                        },
                                        "data": {
                                            "properties": {
                                                "total": {
                                                    "description": "Total products attempted",
                                                    "type": "integer",
                                                    "example": 10
                                                },
                                                "successful": {
                                                    "description": "Successfully scraped products",
                                                    "type": "integer",
                                                    "example": 8
                                                },
                                                "failed": {
                                                    "description": "Failed scraping attempts",
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "results": {
                                                    "description": "Individual results for each product",
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "success": {
                                                                "type": "boolean",
                                                                "example": true
                                                            },
                                                            "url": {
                                                                "type": "string",
                                                                "example": "https://www.amazon.com/dp/B001"
                                                            },
                                                            "platform": {
                                                                "type": "string",
                                                                "example": "amazon"
                                                            },
                                                            "data": {
                                                                "$ref": "#/components/schemas/Product"
                                                            },
                                                            "error": {
                                                                "type": "string",
                                                                "example": null,
                                                                "nullable": true
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation failed"
                                        },
                                        "errors": {
                                            "properties": {
                                                "products": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The products must not have more than 50 items."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred during batch scraping"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/scraping/trigger/{id}": {
            "post": {
                "tags": [
                    "Scraping"
                ],
                "summary": "Trigger re-scraping of an existing product",
                "description": "Manually trigger scraping for an existing product to update its data. This endpoint re-fetches product information from the original source URL.",
                "operationId": "triggerProductScrape",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Product ID to re-scrape",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product re-scraped successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Product re-scraped successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Product"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Product not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Scraping failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to scrape product"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/scraping/platforms": {
            "get": {
                "tags": [
                    "Scraping"
                ],
                "summary": "Get list of supported e-commerce platforms",
                "description": "Retrieve a list of all supported e-commerce platforms with their details, domains, and supported features",
                "operationId": "getSupportedPlatforms",
                "responses": {
                    "200": {
                        "description": "Supported platforms retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Supported platforms retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "platforms": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "name": {
                                                                "type": "string",
                                                                "example": "amazon"
                                                            },
                                                            "display_name": {
                                                                "type": "string",
                                                                "example": "Amazon"
                                                            },
                                                            "domains": {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "string"
                                                                },
                                                                "example": [
                                                                    "amazon.com",
                                                                    "amazon.co.uk",
                                                                    "amazon.de"
                                                                ]
                                                            },
                                                            "supported_features": {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "string"
                                                                },
                                                                "example": [
                                                                    "scraping",
                                                                    "mapping",
                                                                    "proxy_rotation",
                                                                    "auto_update"
                                                                ]
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Product": {
                "title": "Product",
                "description": "Product model for watching e-commerce products",
                "required": [
                    "title",
                    "price",
                    "product_url",
                    "platform"
                ],
                "properties": {
                    "id": {
                        "description": "Product ID",
                        "type": "integer",
                        "readOnly": true,
                        "example": 1
                    },
                    "title": {
                        "description": "Product title",
                        "type": "string",
                        "maxLength": 500,
                        "example": "Sony WH-1000XM4 Wireless Headphones"
                    },
                    "price": {
                        "description": "Product price",
                        "type": "number",
                        "format": "float",
                        "example": 349.99
                    },
                    "price_currency": {
                        "description": "ISO 4217 currency code",
                        "type": "string",
                        "default": "USD",
                        "maxLength": 3,
                        "example": "USD"
                    },
                    "rating": {
                        "description": "Product rating (0-5)",
                        "type": "number",
                        "format": "float",
                        "maximum": 5,
                        "minimum": 0,
                        "example": 4.5,
                        "nullable": true
                    },
                    "rating_count": {
                        "description": "Number of ratings",
                        "type": "integer",
                        "minimum": 0,
                        "example": 1250,
                        "nullable": true
                    },
                    "image_url": {
                        "description": "Product image URL",
                        "type": "string",
                        "maxLength": 2048,
                        "example": "https://m.media-amazon.com/images/I/71o8Q5XJS5L._AC_SX679_.jpg",
                        "nullable": true
                    },
                    "product_url": {
                        "description": "URL of the product being watched",
                        "type": "string",
                        "maxLength": 2048,
                        "example": "https://www.amazon.com/dp/B0863TXGM3"
                    },
                    "platform": {
                        "description": "Source platform (amazon or jumia)",
                        "type": "string",
                        "enum": [
                            "amazon",
                            "jumia"
                        ],
                        "example": "amazon"
                    },
                    "platform_id": {
                        "description": "Platform-specific product identifier (ASIN for Amazon, SKU for others)",
                        "type": "string",
                        "maxLength": 100,
                        "example": "B0863TXGM3",
                        "nullable": true
                    },
                    "platform_category": {
                        "description": "Category from the platform",
                        "type": "string",
                        "maxLength": 255,
                        "example": "Electronics",
                        "nullable": true
                    },
                    "last_scraped_at": {
                        "description": "Last successful scrape timestamp",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-10-03T12:00:00Z",
                        "nullable": true
                    },
                    "scrape_count": {
                        "description": "Number of times product has been scraped",
                        "type": "integer",
                        "default": 0,
                        "example": 15
                    },
                    "is_active": {
                        "description": "Whether product is actively being watched",
                        "type": "boolean",
                        "default": true,
                        "example": true
                    },
                    "created_at": {
                        "description": "Creation timestamp",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2025-10-01T12:00:00Z"
                    },
                    "updated_at": {
                        "description": "Last update timestamp",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2025-10-03T12:00:00Z"
                    }
                },
                "type": "object"
            },
            "User": {
                "title": "User",
                "required": [
                    "name",
                    "email",
                    "password"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true,
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "john@example.com"
                    },
                    "email_verified_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-06-01T12:00:00Z",
                        "nullable": true
                    },
                    "password": {
                        "type": "string",
                        "format": "password",
                        "writeOnly": true,
                        "example": "secret"
                    },
                    "remember_token": {
                        "type": "string",
                        "example": "randomtoken123",
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2025-06-01T12:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2025-06-01T12:00:00Z"
                    }
                },
                "type": "object"
            }
        }
    },
    "tags": [
        {
            "name": "Products",
            "description": "Product management endpoints - CRUD operations for watched products"
        },
        {
            "name": "Scraping",
            "description": "Product scraping operations - endpoints for scraping products from e-commerce platforms"
        }
    ]
}