name: palmoutsourcing-task-2

services:
  # Laravel (Sail-based PHP-FPM + nginx inside)
  laravel.test:
    container_name: laravel.test
    build:
      context: './apps/api/vendor/laravel/sail/runtimes/8.4'
      dockerfile: Dockerfile
      args:
        WWWGROUP: '${WWWGROUP}'
    image: 'sail-8.4/app'
    ports:
      - '${APP_PORT:-80}:80'
      - '${VITE_PORT:-5173}:${VITE_PORT:-5173}'
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    environment:
      LARAVEL_SAIL: 1
      WWWUSER: '${WWWUSER:-1000}'
      WWWGROUP: '${WWWGROUP:-1000}'
      DB_CONNECTION: '${DB_CONNECTION:-mysql}'
      DB_HOST: '${DB_HOST:-mysql}'
      DB_PORT: '${DB_PORT:-3306}'
      DB_DATABASE: '${DB_DATABASE:-laravel}'
      DB_USERNAME: '${DB_USERNAME:-sail}'
      DB_PASSWORD: '${DB_PASSWORD:-password}'
      PROXY_SERVICE_PORT: '${PROXY_SERVICE_PORT:-7001}'
      XDEBUG_MODE: '${SAIL_XDEBUG_MODE:-off}'
      XDEBUG_CONFIG: '${SAIL_XDEBUG_CONFIG:-client_host=host.docker.internal}'
      IGNITION_LOCAL_SITES_PATH: '${PWD}'
    env_file:
      - ./apps/api/.env
    restart: unless-stopped
    volumes:
      - ./apps/api:/var/www/html
    depends_on:
      mysql:
        condition: service_healthy
    networks: [sail]

  # MySQL
  mysql:
    container_name: mysql
    image: 'mysql:8.0'
    ports:
      - '${FORWARD_DB_PORT:-3306}:3306'
    env_file:
      - ./apps/api/.env
    environment:
      MYSQL_ROOT_PASSWORD: '${DB_PASSWORD:-password}'
      MYSQL_ROOT_HOST: '%'
      MYSQL_DATABASE: '${DB_DATABASE:-laravel}'
      MYSQL_USER: '${DB_USERNAME:-sail}'
      MYSQL_PASSWORD: '${DB_PASSWORD:-password}'
      MYSQL_ALLOW_EMPTY_PASSWORD: 1
      MYSQL_EXTRA_OPTIONS: '${MYSQL_EXTRA_OPTIONS}'
    volumes:
      - './data/sail-mysql:/var/lib/mysql'
      - './apps/api/vendor/laravel/sail/database/mysql/create-testing-database.sh:/docker-entrypoint-initdb.d/10-create-testing-database.sh'
    networks:
      - sail
    healthcheck:
      test:
        - CMD
        - mysqladmin
        - ping
        - '-p${DB_PASSWORD:-password}'
      retries: 3
      timeout: 5s

  # Proxy service
  proxy:
    container_name: proxy-service
    build:
      context: ./apps/proxy-service
      dockerfile: Dockerfile
    ports:
      - '${PROXY_SERVICE_PORT:-7001}:${PROXY_SERVICE_PORT:-7001}'
    environment:
      PROXY_SERVICE_PORT: '${PROXY_SERVICE_PORT:-7001}'
      PROXY_SERVICE_HEALTHCHECK_INTERVAL: '${PROXY_SERVICE_HEALTHCHECK_INTERVAL:-60}'
      PROXY_SERVICE_REQUEST_TIMEOUT: '${PROXY_SERVICE_REQUEST_TIMEOUT:-30}'
      PROXY_SERVICE_MAX_RETRIES: '${PROXY_SERVICE_MAX_RETRIES:-5}'
      PROXY_SERVICE_RATE_LIMIT: '${PROXY_SERVICE_RATE_LIMIT:-120}'
    restart: unless-stopped
    networks:
      - sail
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  # Next.js dev
  web:
    container_name: web
    build:
      context: './apps/web'
      dockerfile: Dockerfile
    ports:
      - "3001:3000"
    environment:
      PORT: 3000
      NEXT_PUBLIC_API_URL: "http://localhost:8081"
    restart: unless-stopped
    volumes:
      - ./apps/web:/app
    depends_on:
      - laravel.test
    networks: [sail]

networks:
  sail:
    driver: bridge
